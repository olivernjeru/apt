<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/registerUser.css">
</head>

<body>
    <main>
        <div>
            <!-- Error message if needed -->
            {{#if error}}
            <div class="alert alert-danger text-center">{{error}}</div>
            {{/if}}

            <!-- Form submits a POST request to /register -->
            <form id="registerForm" class="hb-auth-form" action="/register" method="post" novalidate>
                <div class="mb-4">
                    <label for="email" class="form-label">Email</label>
                    <input type="email" class="form-control" id="email" name="email" placeholder="Enter user's email"
                        required>
                    <div class="invalid-feedback">Please enter a valid email address.</div>
                </div>

                <div class="mb-4">
                    <label for="password" class="form-label">Password</label>
                    <div class="input-group">
                        <input type="password" class="form-control" id="password" name="password"
                            placeholder="Enter password" required minlength="6">
                        <button type="button" class="btn btn-outline-secondary" id="togglePassword">
                            <i class="bi bi-eye-slash" id="toggleIconPassword"></i>
                        </button>
                    </div>
                    <div class="invalid-feedback">Password must be at least 6 characters long.</div>
                </div>

                <div class="mb-4">
                    <label for="password2" class="form-label">Confirm Password</label>
                    <div class="input-group">
                        <input type="password" class="form-control" id="password2" name="password2"
                            placeholder="Confirm password" required>
                        <button type="button" class="btn btn-outline-secondary" id="togglePassword2">
                            <i class="bi bi-eye-slash" id="toggleIconPassword2"></i>
                        </button>
                    </div>
                    <div class="invalid-feedback">Passwords do not match.</div>
                </div>

                <div class="mb-4">
                    <label class="form-label">Role</label>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="role" value="receptionist" id="receptionist"
                            required>
                        <label class="form-check-label" for="receptionist">Receptionist</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="role" value="housekeeping" id="housekeeping">
                        <label class="form-check-label" for="housekeeping">Housekeeping</label>
                    </div>
                    <div class="invalid-feedback d-block" id="roleError">Please select a role.</div>
                </div>

                <div class="d-flex">
                    <button type="submit" class="btn hb-btn-primary me-4" id="submitBtn">Register</button>
                    <a href="/admin/users" class="btn hb-btn-secondary">Cancel</a>
                </div>
                
                <div class="text-center mt-3 d-none" id="loadingIndicator">
                    <div class="spinner-border text-primary" role="status"></div>
                    <p class="mt-2">Registering...</p>
                </div>
            </form>
        </div>
    </main>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("registerForm");
            const email = document.getElementById("email");
            const password = document.getElementById("password");
            const password2 = document.getElementById("password2");
            const roleRadios = document.querySelectorAll('input[name="role"]');
            const roleError = document.getElementById("roleError");
            const submitBtn = document.getElementById("submitBtn");
            const loadingIndicator = document.getElementById("loadingIndicator");
            const togglePassword = document.getElementById("togglePassword");
            const toggleIconPassword = document.getElementById("toggleIconPassword");
            const togglePassword2 = document.getElementById("togglePassword2");
            const toggleIconPassword2 = document.getElementById("toggleIconPassword2");

            function validateEmail() {
                if (!email.validity.valid) {
                    email.classList.add("is-invalid");
                } else {
                    email.classList.remove("is-invalid");
                }
            }

            function validatePassword() {
                if (password.value.length < 6) {
                    password.classList.add("is-invalid");
                } else {
                    password.classList.remove("is-invalid");
                }
            }

            function validatePasswordMatch() {
                if (password2.value !== password.value) {
                    password2.classList.add("is-invalid");
                } else {
                    password2.classList.remove("is-invalid");
                }
            }

            function validateRoleSelection() {
                let roleSelected = false;
                roleRadios.forEach((radio) => {
                    if (radio.checked) {
                        roleSelected = true;
                    }
                });

                if (!roleSelected) {
                    roleError.classList.remove("d-none");
                } else {
                    roleError.classList.add("d-none");
                }
                return roleSelected;
            }

            // Toggle password visibility for password field
            togglePassword.addEventListener("click", function () {
                if (password.type === "password") {
                    password.type = "text";
                    toggleIconPassword.classList.remove("bi-eye-slash");
                    toggleIconPassword.classList.add("bi-eye");
                } else {
                    password.type = "password";
                    toggleIconPassword.classList.remove("bi-eye");
                    toggleIconPassword.classList.add("bi-eye-slash");
                }
            });

            // Toggle password visibility for confirm password field
            togglePassword2.addEventListener("click", function () {
                if (password2.type === "password") {
                    password2.type = "text";
                    toggleIconPassword2.classList.remove("bi-eye-slash");
                    toggleIconPassword2.classList.add("bi-eye");
                } else {
                    password2.type = "password";
                    toggleIconPassword2.classList.remove("bi-eye");
                    toggleIconPassword2.classList.add("bi-eye-slash");
                }
            });

            email.addEventListener("input", validateEmail);
            password.addEventListener("input", validatePassword);
            password2.addEventListener("input", validatePasswordMatch);
            roleRadios.forEach(radio => radio.addEventListener("change", validateRoleSelection));

            form.addEventListener("submit", function (event) {
                event.preventDefault();

                validateEmail();
                validatePassword();
                validatePasswordMatch();
                let roleValid = validateRoleSelection();

                if (form.checkValidity() && roleValid) {
                    submitBtn.disabled = true;
                    loadingIndicator.classList.remove("d-none");

                    setTimeout(() => {
                        form.submit();
                    }, 1000);
                }
            });
        });
    </script>
</body>

</html>